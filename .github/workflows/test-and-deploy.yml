name: Run Playwright Tests and Publish Allure Report

on:
  push:
    branches: [master]
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    continue-on-error: true

    env:
      SECRET_EMAIL: ${{ secrets.SECRET_EMAIL }}
      SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
      SECRET_NAME: ${{ secrets.SECRET_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Pipenv & dependencies
        run: |
          pip install pipenv
          pipenv install
          pipenv run playwright install

      - name: Run tests with Allure
        run: pipenv run pytest

      - name: Install Allure CLI
        run: |
          npm install -g allure-commandline --save-dev

      - name: Generate Allure Report
        run: allure generate reports/allure-results -o reports/allure-report --clean

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: reports/allure-report
          publish_branch: gh-pages

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Send Slack Notification (Grouped by Feature)
        if: always()
        run: |
          
          declare -A passed_by_suite
          declare -A failed_by_suite

          for file in reports/allure-results/*.json; do
            if jq -e '.status and .stage == "finished" and .name and .labels' "$file" > /dev/null; then
              suite=$(jq -r '.labels[] | select(.name == "parentSuite") | .value' "$file")
              status=$(jq -r '.status' "$file")
              [ -z "$suite" ] && suite="Uncategorized"
              if [[ "$status" == "passed" ]]; then
                ((passed_by_suite["$suite"]++))
              elif [[ "$status" == "failed" ]]; then
                ((failed_by_suite["$suite"]++))
              fi
            fi
          done

          
          fields=""
          for suite in "${!passed_by_suite[@]}" "${!failed_by_suite[@]}"; do
            pass=${passed_by_suite[$suite]:-0}
            fail=${failed_by_suite[$suite]:-0}
            fields="$fields,
              {
                \"title\": \"$suite\",
                \"value\": \"‚úÖ $pass  ‚ùå $fail\",
                \"short\": false
              }"
          done

          total_pass=$(IFS=+; echo "$(( ${passed_by_suite[@]} ))")
          total_fail=$(IFS=+; echo "$(( ${failed_by_suite[@]} ))")

          curl -X POST -H 'Content-type: application/json' \
            --data "{
              \"text\": \"*üé≠ Playwright Test Summary*\",
              \"attachments\": [
                {
                  \"color\": \"$(if [ \"$total_fail\" -eq 0 ]; then echo good; else echo danger; fi)\",
                  \"fields\": [ ${fields:1} ],
                  \"actions\": [
                    {
                      \"type\": \"button\",
                      \"text\": \"üìä View Report\",
                      \"url\": \"https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/\"
                    }
                  ]
                }
              ]
            }" ${{ secrets.SLACK_WEBHOOK_URL }}